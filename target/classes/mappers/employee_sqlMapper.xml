<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <!--
	작성자 : 
	작성일 : 
	 에서 사용하는 mapper
-->
  
  
  <mapper namespace="com.spring.Creamy_CRM.Host_dao.EmployeeDAO">
  
  <!--
	작성자 : 주수림
	작성일 : 2021-09-20
	시작
-->
  
	 <!-- 직원 목록 조회 -->
	<select id="employeeList" parameterType="String" resultType="com.spring.Creamy_CRM.VO.EmployeeVO">
		SELECT * 
		  FROM employee_tbl 
		 WHERE host_code = #{host_code}
		 ORDER BY TO_NUMBER(SUBSTR(employee_code,2)) DESC
	</select>
	
	<!-- 직원 상세 정보 조회 -->
	<select id="getEmployeeDetail" parameterType="String" resultType="com.spring.Creamy_CRM.VO.EmployeeVO">
		SELECT *
		  FROM employee_tbl
		 WHERE employee_code = #{employee_code}
	</select>
	
	<!-- 직원 정보 수정 -->
	<!-- Oracle 부적합한 열유형 Null 처리 방법 : 해당 column에 데이터를 넣을때 jdbcType=VARCHAR 같이 적어준다. -->
	<update id="updateEmployee" parameterType="com.spring.Creamy_CRM.VO.EmployeeVO">
		UPDATE employee_tbl
		   SET employee_name=#{employee_name}, employee_gender=#{employee_gender}, employee_email=#{employee_email}, employee_ph=#{employee_ph}, employee_address=#{employee_address},
		       department=#{department}, position=#{position}, duty=#{duty}, job=#{job}, employee_type=#{employee_type}, annual_leave_cnt=#{annual_leave_cnt}, 
		       			employee_hireDate=#{employee_hireDate}, employee_resignDate=#{employee_resignDate, jdbcType=VARCHAR}
		 WHERE employee_code=#{employee_code}
	</update>
	
	<!-- 직원의 근태 목록 조회 -->
	<select id="getAttendanceList" parameterType="java.util.Map" resultType="com.spring.Creamy_CRM.VO.AttendanceVO">
		SELECT *
		  FROM attendance_tbl
		 WHERE employee_code = #{empCode}
		   AND TO_CHAR(attendance_date, 'YYYY-MM') = #{curMonth}
		ORDER BY attendance_date DESC
	</select>
	
	<!-- 직원의 해당 근태 정보 조회 -->
	<select id="getAttendanceInfo" parameterType="String" resultType="com.spring.Creamy_CRM.VO.AttendanceVO">
		SELECT *
		  FROM attendance_tbl
		 WHERE attendance_code = #{attendance_code}
	</select>
	
	<!-- 직원의 출근 시간 수정 -->
	<update id="updateCheckInTime" parameterType="com.spring.Creamy_CRM.VO.AttendanceVO">
		UPDATE attendance_tbl
		   SET lateChk = #{lateChk}, check_in_time = #{check_in_time}, temperature = #{temperature}, memo = #{memo}
		 WHERE attendance_code = #{attendance_code}
	</update>
	
	<!-- 직원의 퇴근 시간 수정 -->
	<update id="updateCheckOutTime" parameterType="com.spring.Creamy_CRM.VO.AttendanceVO">
		UPDATE attendance_tbl
		   SET lateChk = #{lateChk}, check_out_time = #{check_out_time}, memo = #{memo}
		 WHERE attendance_code = #{attendance_code}
	</update>
	
	<!-- 직원의 근태 정보 삭제 -->
	<delete id="deleteAttendance" parameterType="String">
		DELETE FROM attendance_tbl
		 WHERE attendance_code = #{attendance_code}
	</delete>
	
	<!-- 직원의 휴가 정보 조회 -->
	<select id="getLeaveList" parameterType="String" resultType="com.spring.Creamy_CRM.VO.LeaveVO">
		SELECT *
		  FROM leave_tbl
		 WHERE employee_code=#{employee_code}
		ORDER BY leave_regDatae DESC
	</select>
	
	<!-- 직원의 해당 휴가 정보 조회 -->
	<select id="getLeaveInfo" parameterType="String" resultType="com.spring.Creamy_CRM.VO.LeaveVO">
		SELECT *
		  FROM leave_tbl
		 WHERE leave_code = #{leave_code}
	</select>
	
	<!-- 직원의 휴가 수정 처리 -->
	<update id="updateLeave" parameterType="com.spring.Creamy_CRM.VO.LeaveVO">
		UPDATE leave_tbl
		   SET leave_date = #{leave_date}, leave_end = #{leave_end}, leave_usage_cnt = #{leave_usage_cnt},
		   		emergency_contact = #{emergency_contact}, leave_memo = #{leave_memo}, leave_regDatae = SYSDATE
		 WHERE leave_code = #{leave_code}
	</update>
	
	<!-- 직원의 휴가 정보 삭제 -->
	<delete id="deleteLeave" parameterType="String">
		DELETE FROM leave_tbl
		 WHERE leave_code = #{leave_code}
	</delete>	
	
	<!-- 직원의 급여 계약 정보 조회 -->
	<select id="getContractList" parameterType="String" resultType="com.spring.Creamy_CRM.VO.SalaryContractVO">
		SELECT *
		  FROM salary_contract_tbl
		 WHERE employee_code=#{employee_code}
		ORDER BY contract_date DESC
	</select>
	
	<!-- 직원의 급여 계약 삭제 -->
	<delete id="deleteContract" parameterType="String">
		DELETE FROM salary_contract_tbl
		 WHERE salary_contract_code = #{salary_contract_code} 	
	</delete>
	
	<!-- 이미 급여 지급이 완료되었는지 체크 -->
	<select id="chkPaymentAction" parameterType="String" resultType="int">
		SELECT COUNT(*)
		  FROM salary_tbl
		 WHERE pay_month = #{pay_month}	
	</select>
	
	<!-- 직원 급여 지급 등록 -->
	<insert id="insertPayment" parameterType="com.spring.Creamy_CRM.VO.SalaryVO">
		INSERT INTO salary_tbl(salary_code, employee_code, salary_payDate, pay_month, salary, income_tax, national_pension, health_insurance,
								employment_insurance, lt_care_insurance, deduction_total, loan_payment_amount)
		VALUES('S'||sal_seq.nextval, #{employee_code}, #{salary_payDate}, #{pay_month}, #{salary},  #{income_tax}, #{national_pension},
				#{health_insurance}, #{employment_insurance}, #{lt_care_insurance}, #{deduction_total}, #{loan_payment_amount})
	</insert>
	
	<!-- 직원 급여 지급 정보 조회 -->
	<select id="getPaymentList" parameterType="String" resultType="com.spring.Creamy_CRM.VO.SalaryVO">
		SELECT *
		  FROM salary_tbl
		 WHERE employee_code = #{employee_code}
		ORDER BY salary_payDate DESC
	</select>
	
	<!-- 직원 급여 지급 삭제 -->
	<delete id="deletePayment" parameterType="String">
		DELETE FROM salary_tbl
		 WHERE salary_code = #{salary_code}
	</delete>
	
	<!-- 이미 직원 등록이 완료된 id인지 체크 -->
	<select id="chkEmployeeIdPreexisting" parameterType="String" resultType="Integer">
		SELECT COUNT(*) 
		  FROM employee_tbl 
		 WHERE employee_id = #{employee_id}
	</select>
   
   <!-- 직원 등록시 id 확인 -->
	<select id="chkEmployeeIdAction" parameterType="String" resultType="Integer">
		SELECT COUNT(*) 
		  FROM Auth_tbl 
		 WHERE ID = #{ID}
	</select>
	
	<!-- 직원 id와 pwd를 Auth 테이블에 삽입 -->
	<insert id="insertEmployeeAuth" parameterType="java.util.Map">
  		insert into Auth_tbl(ID, password, key, authority, enabled)
  		values(#{ID}, #{password}, #{key}, 'ROLE_EMP', 1)
  	</insert>
   
	<!-- 직원 등록  -->
	<insert id="insertEmployee" parameterType="com.spring.Creamy_CRM.VO.EmployeeVO">
		INSERT INTO employee_tbl(employee_code, employee_id, host_code, employee_name, employee_gender, employee_age, employee_email, employee_address, 
		   				 employee_ph, employee_hireDate, employee_resignDate, department, position, duty, job, employee_type, annual_leave_cnt)
		VALUES ('E'||emp_seq.nextval, #{employee_id}, #{host_code}, #{employee_name}, #{employee_gender}, #{employee_age}, #{employee_email}, #{employee_address}, 
		    			#{employee_ph}, SYSDATE, null, #{department}, #{position}, #{duty}, #{job}, #{employee_type}, #{annual_leave_cnt})
	</insert>  	
  
  	<!-- 근태 - 출근 insert -->
  	<insert id="insertAttendance" parameterType="com.spring.Creamy_CRM.VO.AttendanceVO">
  		INSERT INTO attendance_tbl (attendance_code, employee_code, attendance_date, check_in_time, check_out_time, lateChk, temperature, examination_chk1, examination_chk2, examination_chk3, memo)
		VALUES ('AT'||attendance_seq.nextval, #{employee_code}, SYSDATE, #{check_in_time}, #{check_out_time}, #{lateChk}, #{temperature}, #{examination_chk1}, #{examination_chk2}, #{examination_chk3}, #{memo})
  	</insert>
  
  	<!-- 근태 - 퇴근시 출근 기록 확인, 중복 출근 체크 -->
  	<select id="chkIn" parameterType="com.spring.Creamy_CRM.VO.AttendanceVO" resultType="Integer">
  		SELECT COUNT(*)
  		  FROM attendance_tbl
  		 WHERE employee_code = #{employee_code}
  		   AND TO_CHAR(attendance_date, 'yyyy/MM/dd') = TO_CHAR(#{attendance_date}, 'yyyy/MM/dd')
  	</select>
  
  	<!-- 근태 - 퇴근시 attendance_tbl 퇴근시간 update -->
  	<update id="updateAttendanceOut" parameterType="com.spring.Creamy_CRM.VO.AttendanceVO">
  		UPDATE attendance_tbl
  		   SET check_out_time = #{check_out_time},
  		       lateChk = lateChk || ' / ' || #{lateChk},
  		       memo = memo || ' / ' || #{memo}
  		 WHERE employee_code = #{employee_code}
  		   AND TO_CHAR(attendance_date, 'yyyy/MM/dd') = TO_CHAR(#{attendance_date}, 'yyyy/MM/dd')
  	</update>
  	
  	<!-- 근무시간 등록 여부 체크 -->
  	<select id="chkWorkingHours" parameterType="String" resultType="Integer">
  		SELECT COUNT(*) 
  		  FROM working_hours_tbl
  		 WHERE employee_code = #{employee_code}
  	</select>
  	
  	<!-- 근무시간 등록  -->
  	<insert id="insertWorkingHours" parameterType="com.spring.Creamy_CRM.VO.WorkingHoursVO">
  		INSERT INTO working_hours_tbl (working_hours_code, employee_code, late_criteria, early_criteria, mon_in, mon_out, tue_in, tue_out, wed_in, wed_out, 
  										thu_in, thu_out, fri_in, fri_out, sat_in, sat_out, sun_in, sun_out, weekly_hours)
		VALUES ('WH'||working_hrs_seq.nextval, #{employee_code}, #{late_criteria}, #{early_criteria}, #{mon_in}, #{mon_out}, #{tue_in}, #{tue_out}, #{wed_in}, #{wed_out}, 
				#{thu_in}, #{thu_in}, #{fri_in}, #{fri_out}, #{sat_in}, #{sat_out}, #{sun_in}, #{sun_out}, #{weekly_hours})
  	</insert>
     
    <!-- 근무시간 update -->
    <update id="updateWorkingHours" parameterType="com.spring.Creamy_CRM.VO.WorkingHoursVO">
    	UPDATE working_hours_tbl
    	   SET late_criteria = #{late_criteria}, early_criteria = #{early_criteria}, mon_in = #{mon_in}, mon_out = #{mon_out},
    	   		tue_in = #{tue_in}, tue_out = #{tue_out}, wed_in = #{wed_in}, wed_out = #{wed_out}, thu_in = #{thu_in}, thu_out = #{thu_out},
    	   		fri_in = #{fri_in}, fri_out = #{fri_out}, sat_in = #{sat_in}, sat_out = #{sat_out}, sun_in = #{sun_in}, sun_out = #{sun_out}, weekly_hours = #{weekly_hours}
    	 WHERE employee_code = #{employee_code}
    </update>
    
    <!-- 휴가 등록 insert (휴가등록시 직원테이블의 휴가사용일자 증가 트리거) -->
    <insert id="insertLeave" parameterType="com.spring.Creamy_CRM.VO.LeaveVO">
    	INSERT INTO leave_tbl (leave_code, employee_code, leave_date, leave_end, leave_usage_cnt, emergency_contact, leave_memo, leave_regDatae)
    	VALUES ('L'||leave_seq.nextval, #{employee_code}, #{leave_date}, #{leave_end}, #{leave_usage_cnt},#{emergency_contact}, #{leave_memo}, SYSDATE)
    </insert>
     
    <!-- 급여 계약 등록 -->
    <insert id="insertBankInfo" parameterType="com.spring.Creamy_CRM.VO.SalaryContractVO">
    	INSERT INTO bank_tbl (bank_code, bank_name, accountAs, account_number, account_holder)
    	VALUES ('B'||bank_seq.nextval, #{bank_name}, null, #{account_number}, #{account_holder})
    </insert>
    
    <!-- 은행코드 조회 -->
     <select id="getBankCode" parameterType="java.util.Map" resultType="String">
     	SELECT bank_code 
     	  FROM bank_tbl
     	 WHERE account_number = #{account_number}
     	   AND account_holder = #{account_holder}
     </select>
     
    <!-- 은행 이미 등록되어있는지 확인 -->
     <select id="getBankCodeCnt" parameterType="java.util.Map" resultType="Integer">
     	SELECT COUNT(*) 
     	  FROM bank_tbl
     	 WHERE account_number = #{account_number}
     	   AND account_holder = #{account_holder}
     </select>
      
    <!-- 급여 계약 등록 -->
    <insert id="insertSalaryContract" parameterType="com.spring.Creamy_CRM.VO.SalaryContractVO">
    	INSERT INTO salary_contract_tbl (salary_contract_code, employee_code, monthly_salary, annual_salary, bank_code,
    										payment_date, contract_date, con_start, con_end, contract_stat)
    	VALUES ('SC'||sal_con_seq.nextval, #{employee_code}, #{monthly_salary}, #{annual_salary}, #{bank_code}, 
    				#{payment_date}, SYSDATE, #{con_start}, #{con_end}, #{contract_stat})
    </insert>
      
    <!-- 등록된 급여 계약이 있는지 확인 --> 
    <select id="chkSalaryContract" parameterType="String" resultType="Integer">
     	SELECT COUNT(*) 
     	  FROM salary_contract_tbl
     	 WHERE employee_code = #{employee_code}
     	   AND contract_stat = '계약중'
     </select>  
      
     <!-- 해당 직원코드에 대해 이미 등록된 급여계약이 있을 경우 기존의 contract_stat = '계약 종료'로 update -->
     <update id="updateSalaryContract" parameterType="com.spring.Creamy_CRM.VO.SalaryContractVO">
     	UPDATE salary_contract_tbl
     	   SET contract_stat = #{contract_stat}
     	 WHERE employee_code = #{employee_code}
     	   AND contract_stat = '계약중'
     </update>
       
  </mapper>